---
import { Icon } from 'astro-icon/components';

interface Props {
  /** Texto del bot칩n. Si no se pasa, se renderiza el slot */
  text?: string;
  /** Clase base para el bot칩n (layout, paddings, rounded, etc) */
  baseBtnClass?: string;
  /** Clases adicionales que el usuario quiera aplicar (border, bg color, etc) */
  extraBtnClass?: string;
  /** Clase base para el texto */
  baseTextClass?: string;
  /** Clases adicionales para el texto (color, uppercase, size) */
  textClass?: string;
  baseIconClass?: string;
  /** Clases para el icono (s칩lo color/tama침o si lo deseas) */
  iconClass?: string;
}

const {
  text = '',
  baseBtnClass = 'flex justify-center items-center py-2.5 sm:py-3 rounded-full cursor-pointer gap-1 hover:-translate-y-[2px] transition-transform duration-300 ease-in-out z-[10]',
  extraBtnClass = '',
  baseTextClass = 'font-medium leading-[140%]',
  textClass = '',
  baseIconClass = 'h-[18px] w-[18px]',
  iconClass = '',
} = Astro.props as Props;

// Construir clases finales
const buttonClasses = `${baseBtnClass} ${extraBtnClass}`.trim();
const paragraphClasses = `${baseTextClass} ${textClass}`.trim();
const iconClasses = `${baseIconClass} ${iconClass}`.trim();
---

<button type="button" class={buttonClasses}>
  {text ? <p class={paragraphClasses}>{text}</p> : <slot />}
  <Icon name={'arrow-d'} class={iconClasses} />
</button>
